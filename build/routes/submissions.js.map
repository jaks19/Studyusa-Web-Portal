{"version":3,"sources":["../../routes/submissions.js"],"names":["express","require","authServices","dbopsServices","filesystemServices","notifServices","User","Submission","Comment","Add","router","Router","mergeParams","get","confirmUserCredentials","req","res","findOneEntryAndPopulate","params","username","foundUser","render","loggedIn","user","client","post","getNewFileMetadata","fileData","newSubData","title","createEntryAndSave","newSubmission","newAddData","file","fileName","author","submission","newAdd","newCommentData","content","message","newComment","messages","push","adds","savePopulatedEntry","submissions","assignNotification","redirect","id","foundSub","sub","module","exports"],"mappings":"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","file":"submissions.js","sourcesContent":["// Packages\nlet express = require(\"express\"),\n    authServices = require('../services/auth-services'),\n    dbopsServices = require('../services/dbops-services'),\n    filesystemServices = require('../services/filesystem-services'),\n    notifServices = require('../services/notif-services');\n\n// Models\nlet User = require(\"../models/user\"),\n    Submission = require(\"../models/submission\"),\n    Comment = require(\"../models/comment\"),\n    Add = require(\"../models/add\");\n\nlet router = express.Router({ mergeParams: true });\n\n// New Submission\nrouter.get('/',authServices.confirmUserCredentials, async function(req, res) {\n    let foundUser = await dbopsServices.findOneEntryAndPopulate(User, { 'username': req.params.username }, [ 'submissions' ], req, res);\n    res.render('submit', {\n        loggedIn: true,\n        user: req.user,\n        client: foundUser\n    });\n});\n\n// New Submission\nrouter.post('/', authServices.confirmUserCredentials, async function(req, res) { //IMPORTANT: normally you would use a post request to an index page but I already have one POST req going there for Users\n    let fileData = await filesystemServices.getNewFileMetadata(req, res),\n        newSubData = new Submission({ title: fileData.title }),\n        newSubmission = await dbopsServices.createEntryAndSave(Submission, newSubData, req, res, false),\n        foundUser = await dbopsServices.findOneEntryAndPopulate(User, { 'username': req.params.username }, [ ], req, res),\n        newAddData = new Add({ file: fileData.fileName, author: foundUser.username, submission: newSubmission }),\n        newAdd = await dbopsServices.createEntryAndSave(Add, newAddData, req, res),\n        newCommentData = new Comment({ username: req.user.username, content: fileData.message }),\n        newComment = await dbopsServices.createEntryAndSave(Comment, newCommentData, req, res);\n       \n    newSubmission.user = foundUser;\n    newSubmission.messages.push(newComment);\n    newSubmission.adds.push(newAdd);\n    dbopsServices.savePopulatedEntry(newSubmission, req, res);                                         \n    foundUser.submissions.push(newSubmission);\n    dbopsServices.savePopulatedEntry(foundUser, req, res);         \n    notifServices.assignNotification(req.user.username, newSubData.title, 'add', req.params.username, req);\n    res.redirect('/index/' + req.params.username);\n});\n\n// Show Submission\nrouter.get('/:id', authServices.confirmUserCredentials, async function(req, res) {\n    let foundSub = await dbopsServices.findOneEntryAndPopulate(Submission, { '_id': req.params.id }, [ 'user', 'messages', 'adds' ], req, res);\n    res.render('viewFile', {\n        sub: foundSub,\n        user: req.user,\n        client: foundSub.user,\n        loggedIn: true\n    });\n});\n\nmodule.exports = router;\n"]}
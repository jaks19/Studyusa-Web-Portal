{"version":3,"sources":["../../routes/adds.js"],"names":["express","require","fs","authServices","filesystemServices","dbopsServices","notifServices","Submission","Add","router","Router","mergeParams","get","confirmUserCredentials","req","res","findOneEntryAndPopulate","params","addId","foundAdd","download","getExistingFilePath","delete","username","foundSub","submission","fileName","file","findEntryByIdAndRemove","_id","redirect","title","post","id","getAddedFileName","newAddData","author","user","createEntryAndSave","newAdd","adds","push","savePopulatedEntry","assignNotification","flash","module","exports"],"mappings":"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","file":"adds.js","sourcesContent":["// An 'Add' is a file submitted to elongate a submission thread\n\n// Packages\nlet express = require(\"express\"),\n    fs = require(\"fs\"), // To read-from/write-to files\n    authServices = require('../services/auth-services'),\n    filesystemServices = require('../services/filesystem-services'),\n    dbopsServices = require('../services/dbops-services'),\n    notifServices = require('../services/notif-services');\n\n// Models\nlet Submission = require(\"../models/submission\"),\n    Add        = require(\"../models/add\");\n\nlet router = express.Router({\n    mergeParams: true\n});\n\n// Download file (Get add)\nrouter.get('/:addId', authServices.confirmUserCredentials, async function(req, res) { \n    let foundAdd = await dbopsServices.findOneEntryAndPopulate(Add, { '_id' : req.params.addId }, [ 'submission' ], req, res);\n    res.download(filesystemServices.getExistingFilePath(foundAdd, req));\n});\n\n// Delete File (Delete add)\nrouter.delete('/:addId', authServices.confirmUserCredentials, async function(req, res) { \n    let username = req.params.username,\n        foundAdd = await dbopsServices.findOneEntryAndPopulate(Add, { '_id': req.params.addId }, ['submission'], req, res),\n        foundSub = foundAdd.submission,\n        fileName = foundAdd.file;\n    await dbopsServices.findEntryByIdAndRemove(Add, foundAdd._id, req, res);\n    res.redirect('/index/' + username + '/submit/' + foundSub._id + '/s3/' + foundSub.title + '/delete/' + fileName);\n});\n\n// New Update file to a thread\nrouter.post('/', authServices.confirmUserCredentials, async function(req, res) {\n    let username = req.params.username,\n        foundSub = await dbopsServices.findOneEntryAndPopulate(Submission, { '_id': req.params.id }, [ 'user' ], req, res),\n        fileName = await filesystemServices.getAddedFileName(req, res),\n        newAddData = new Add({file: fileName, author: req.user.username, submission: foundSub}),\n        newAdd = await dbopsServices.createEntryAndSave(Add, newAddData, req, res);\n        \n    foundSub.adds.push(newAdd);\n    dbopsServices.savePopulatedEntry(foundSub, req, res);\n    notifServices.assignNotification(req.user.username, foundSub.title, 'add', foundSub.user.username, req);\n    req.flash('success', 'file successfully uploaded for review');\n    res.redirect('/index/' + username + '/submit/' + foundSub._id);\n});\n\nmodule.exports = router;"]}
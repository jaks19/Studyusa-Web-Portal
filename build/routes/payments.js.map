{"version":3,"sources":["../../routes/payments.js"],"names":["express","require","User","Payment","authServices","dbopsServices","paymentServices","notifServices","router","Router","mergeParams","get","confirmUserCredentials","req","res","findOneEntryAndPopulate","user","username","foundUser","render","loggedIn","headerUser","client","post","createStripeCharge","body","amount","stripeToken","purpose","charge","newPaymentData","gatherPaymentData","createEntryAndSave","newPayment","payments","push","balance","savePopulatedEntry","assignNotification","params","flash","redirect","module","exports"],"mappings":";;;;;;;;;;;;AAAA;AACA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;;AAEA;AACA,IAAIC,OAAOD,QAAQ,gBAAR,CAAX;AAAA,IACIE,UAAUF,QAAQ,mBAAR,CADd;AAAA,IAEIG,eAAeH,QAAQ,2BAAR,CAFnB;AAAA,IAGII,gBAAgBJ,QAAQ,4BAAR,CAHpB;AAAA,IAIIK,kBAAkBL,QAAQ,8BAAR,CAJtB;AAAA,IAKIM,gBAAgBN,QAAQ,4BAAR,CALpB;;AAOA;AACA,IAAIO,SAASR,QAAQS,MAAR,CAAe;AACxBC,iBAAa;AADW,CAAf,CAAb;;AAIA;AACAF,OAAOG,GAAP,CAAW,GAAX,EAAgBP,aAAaQ,sBAA7B;AAAA,0EAAqD,iBAAeC,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAC3BT,cAAcU,uBAAd,CAAsCb,IAAtC,EAA4C,EAAE,YAAYW,IAAIG,IAAJ,CAASC,QAAvB,EAA5C,EAA+E,CAAE,UAAF,EAAc,aAAd,CAA/E,EAA8GJ,GAA9G,EAAmHC,GAAnH,CAD2B;;AAAA;AAC7CI,iCAD6C;;AAEjDJ,4BAAIK,MAAJ,CAAW,KAAX,EAAkB;AACdH,kCAAMH,IAAIG,IADI;AAEdI,sCAAU,IAFI;AAGdC,wCAAY,KAHE;AAIdC,oCAAQJ;AAJM,yBAAlB;;AAFiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArD;;AAAA;AAAA;AAAA;AAAA;;AAUA;AACAV,OAAOe,IAAP,CAAY,GAAZ,EAAiBnB,aAAaQ,sBAA9B;AAAA,2EAAsD,kBAAeC,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9CG,gCAD8C,GACnCJ,IAAIG,IAAJ,CAASC,QAD0B;AAAA;AAAA,+BAE/BX,gBAAgBkB,kBAAhB,CAAmCX,IAAIY,IAAJ,CAASC,MAA5C,EAAoDb,IAAIY,IAAJ,CAASE,WAA7D,EAA0Ed,IAAIY,IAAJ,CAASG,OAAnF,EAA4Ff,GAA5F,EAAiGC,GAAjG,CAF+B;;AAAA;AAE9Ce,8BAF8C;AAAA;AAAA,+BAG5BxB,cAAcU,uBAAd,CAAsCb,IAAtC,EAA4C,EAAE,YAAYe,QAAd,EAA5C,EAAsE,EAAtE,EAA2EJ,GAA3E,EAAgFC,GAAhF,CAH4B;;AAAA;AAG9CI,iCAH8C;AAI9CY,sCAJ8C,GAI7BxB,gBAAgByB,iBAAhB,CAAkCb,SAAlC,EAA6CL,GAA7C,EAAkDgB,MAAlD,CAJ6B;AAAA;AAAA,+BAK3BxB,cAAc2B,kBAAd,CAAiC7B,OAAjC,EAA0C2B,cAA1C,EAA0DjB,GAA1D,EAA+DC,GAA/D,CAL2B;;AAAA;AAK9CmB,kCAL8C;;AAMlDf,kCAAUgB,QAAV,CAAmBC,IAAnB,CAAwBF,UAAxB;AACAf,kCAAUkB,OAAV,IAAqBvB,IAAIY,IAAJ,CAASC,MAA9B;AACArB,sCAAcgC,kBAAd,CAAiCnB,SAAjC,EAA4CL,GAA5C,EAAiDC,GAAjD;AACAP,sCAAc+B,kBAAd,CAAiCzB,IAAIG,IAAJ,CAASC,QAA1C,EAAoDgB,WAAWL,OAA/D,EAAwE,KAAxE,EAA+Ef,IAAI0B,MAAJ,CAAWtB,QAA1F,EAAoGJ,GAApG;AACAA,4BAAI2B,KAAJ,CAAU,SAAV,EAAqB,uCAArB;AACA1B,4BAAI2B,QAAJ,CAAa,YAAYxB,QAAZ,GAAuB,MAApC;;AAXkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtD;;AAAA;AAAA;AAAA;AAAA;;AAcAyB,OAAOC,OAAP,GAAiBnC,MAAjB","file":"payments.js","sourcesContent":["// Packages\nvar express = require(\"express\");\n\n// Models\nvar User = require(\"../models/user\"),\n    Payment = require(\"../models/payment\"),\n    authServices = require('../services/auth-services'),\n    dbopsServices = require('../services/dbops-services'),\n    paymentServices = require('../services/payment-services'),\n    notifServices = require('../services/notif-services');\n\n// To be Exported\nvar router = express.Router({\n    mergeParams: true\n});\n\n// New Payment - GET\nrouter.get('/', authServices.confirmUserCredentials, async function(req, res) {\n    let foundUser = await dbopsServices.findOneEntryAndPopulate(User, { 'username': req.user.username }, [ 'payments', 'submissions' ], req, res);\n    res.render('pay', {\n        user: req.user,\n        loggedIn: true,\n        headerUser: 'pay',\n        client: foundUser\n    });\n});\n\n// New Payment - POST\nrouter.post('/', authServices.confirmUserCredentials, async function(req, res) { \n    let username = req.user.username,\n        charge = await paymentServices.createStripeCharge(req.body.amount, req.body.stripeToken, req.body.purpose, req, res);\n    let foundUser = await dbopsServices.findOneEntryAndPopulate(User, { 'username': username }, [ ], req, res),\n        newPaymentData = paymentServices.gatherPaymentData(foundUser, req, charge),\n        newPayment = await dbopsServices.createEntryAndSave(Payment, newPaymentData, req, res);\n    foundUser.payments.push(newPayment);\n    foundUser.balance -= req.body.amount;\n    dbopsServices.savePopulatedEntry(foundUser, req, res);\n    notifServices.assignNotification(req.user.username, newPayment.purpose, 'pay', req.params.username, req);\n    req.flash('success', 'Card successfully charged! Thank you!');\n    res.redirect('/index/' + username + '/pay');\n});\n\nmodule.exports = router;\n"]}
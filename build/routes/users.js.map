{"version":3,"sources":["../../routes/users.js"],"names":["express","require","path","format","userServices","authServices","filesystemServices","User","router","Router","mergeParams","get","req","res","render","loggedIn","post","newUserObject","name","body","username","register","password","redirect","confirmUserCredentials","user","getUserData","adminData","populatedUser","users","client","notifs","allNotifs","unseenNotifs","firstContact","params","userData","subs","articles","delete","findOneAndRemove","error","flash","module","exports"],"mappings":"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","file":"users.js","sourcesContent":["// Packages\nlet express = require(\"express\"),\n    path = require('path'),\n    format = require('../notifJson');\n\n// Services\nlet userServices = require('../services/user-services'),\n    authServices = require('../services/auth-services'),\n    filesystemServices = require('../services/filesystem-services');\n\n// Models\nlet User = require(\"../models/user\");\n\nlet router = express.Router({ mergeParams: true });\n\n// New User Page\nrouter.get('/new', function(req, res) {\n    res.render('new', {\n        loggedIn: false\n    });\n});\n\n// New User Signup\nrouter.post('/', function(req, res) {\n    var newUserObject = new User({ name: req.body.name, username: req.body.username });\n    User.register(newUserObject, req.body.password, function(){return});\n    res.redirect('/login');\n});\n\n// Admin Dashboard\nrouter.get('/admin', authServices.confirmUserCredentials, async function(req, res) {\n    let username = req.user.username;\n    let adminData = await userServices.getUserData(username, req, res);\n    res.render('./admin/dashboard', {\n            user: adminData.populatedUser,\n            users: adminData.users,\n            client: adminData.populatedUser,\n            notifs: adminData.allNotifs,\n            unseenNotifs: adminData.unseenNotifs,\n            format: format,\n            firstContact: adminData.firstContact,\n            loggedIn: true\n    });\n});\n\n// User Dashboard\nrouter.get('/:username', authServices.confirmUserCredentials, async function(req, res) {\n    let username = req.params.username;\n    let userData = await userServices.getUserData(username, req, res);\n    res.render('show', {\n            user: req.user,\n            client: userData.populatedUser,\n            notifs: userData.allNotifs,\n            unseenNotifs: userData.unseenNotifs,\n            format: format,\n            firstContact: userData.firstContact,\n            subs: userData.subs,\n            articles: userData.articles,\n            loggedIn: true\n    });\n});\n\n// Delete\nrouter.delete('/:username', authServices.confirmUserCredentials, function(req, res) {\n    User.findOneAndRemove({'username' : req.params.username}, function(error){\n        if (error){\n            req.flash('error', 'The user account could not be deleted!');\n            return res.redirect('back');\n        } else {\n            req.flash('success', 'The user account was successfully deleted! Ciao to the user! ;)');\n            return res.redirect('/index/' + req.user.username);\n        }\n    });\n});\n\nmodule.exports = router;"]}
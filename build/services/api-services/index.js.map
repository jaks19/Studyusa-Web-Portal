{"version":3,"sources":["../../../services/api-services/index.js"],"names":["apiServices","request","require","doRequest","url","resolve","reject","error","res","body","statusCode","retrieveNews","req","newsResponse","flash","parsedData","JSON","parse","splice","module","exports"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAIA,cAAc,EAAlB;;AAEA,IAAIC,UAAUC,QAAQ,SAAR,CAAd;;AAEA;AACA;AACA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,SAAO,sBAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CL,YAAQG,GAAR,EAAa,UAAUG,KAAV,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4B;AACvC,UAAI,CAACF,KAAD,IAAUC,IAAIE,UAAJ,IAAkB,GAAhC,EAAqC;AACnCL,gBAAQI,IAAR;AACD,OAFD,MAEO;AACLH,eAAOC,KAAP;AACD;AACF,KAND;AAOD,GARM,CAAP;AASD;;AAEDP,YAAYW,YAAZ;AAAA,wEACI,iBAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACMR,eADN,GACY,+FADZ;AAEMS,wBAFN;AAAA;AAAA;AAAA,mBAIyBV,UAAUC,GAAV,CAJzB;;AAAA;AAIIS,wBAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAOGD,gBAAIE,KAAJ,CAAU,OAAV,EAAmB,8BAAnB;;AAPH;AAUMC,sBAVN,GAUmBC,KAAKC,KAAL,CAAWJ,YAAX,CAVnB;AAAA,6CAWSE,WAAW,UAAX,EAAuBG,MAAvB,CAA8B,CAA9B,EAAiC,EAAjC,CAXT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ;;AAAA,WACmBP,YADnB;AAAA;AAAA;;AAAA,SACmBA,YADnB;AAAA;;AAeAQ,OAAOC,OAAP,GAAiBpB,WAAjB","file":"index.js","sourcesContent":["var apiServices = {};\n\nlet request = require('request');\n\n// request library's request method does not return a promise so we use this wrapper \n// it does the request and returns the body of the response back as a promise\nfunction doRequest(url) {\n  return new Promise(function (resolve, reject) {\n    request(url, function (error, res, body) {\n      if (!error && res.statusCode == 200) {\n        resolve(body);\n      } else {\n        reject(error);\n      }\n    });\n  });\n}\n\napiServices.retrieveNews =\n    async function retrieveNews(req) {\n      let url = 'https://newsapi.org/v1/articles?source=cnn&sortBy=top&apiKey=c8e7fde98b5a4983b913761b2e7db0f6';\n      let newsResponse;\n      try {\n        newsResponse = await doRequest(url);\n      } \n      catch (err) {\n       req.flash('error', 'Could not fetch live news :(');\n      } \n      \n      let parsedData = JSON.parse(newsResponse);\n      return parsedData['articles'].splice(0, 10);\n    }\n    \nmodule.exports = apiServices;"]}
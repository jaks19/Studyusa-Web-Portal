{"version":3,"sources":["../../../services/payment-services/index.js"],"names":["paymentServices","stripe","require","process","env","stripeSecret","promiseToCreateStripeCharge","amount","token","purpose","resolve","reject","charges","create","currency","source","description","err","charge","createStripeCharge","req","res","flash","redirect","gatherPaymentData","foundUser","paymentData","user","body","billingAddress","street","apt","city","state","zip","country","merchant","merchantTransactionId","id","module","exports"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAIA,kBAAkB,EAAtB;;AAEA;AACA;AACA,IAAIC,SAASC,QAAQ,QAAR,EAAkBC,QAAQC,GAAR,CAAYC,YAA9B,CAAb;;AAEA,SAASC,2BAAT,CAAqCC,MAArC,EAA6CC,KAA7C,EAAoDC,OAApD,EAA6D;AAC3D,SAAO,sBAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC3CV,WAAOW,OAAP,CAAeC,MAAf,CAAsB;AACnBN,cAAQA,SAAS,GADE;AAEnBO,gBAAU,KAFS;AAGnBC,cAAQP,KAHW;AAInBQ,mBAAaP;AAJM,KAAtB,EAKI,UAASQ,GAAT,EAAcC,MAAd,EAAsB;AACrB,UAAID,GAAJ,EAAS;AAAEN,eAAOM,GAAP;AAAa,OAAxB,MACK;AAAEP,gBAAQQ,MAAR;AAAiB;AAC3B,KARF;AASF,GAVM,CAAP;AAWD;;AAEDlB,gBAAgBmB,kBAAhB;AAAA,wEAAqC,iBAAkCZ,MAAlC,EAA0CC,KAA1C,EAAiDC,OAAjD,EAA0DW,GAA1D,EAA+DC,GAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEdf,4BAA4BC,MAA5B,EAAoCC,KAApC,EAA2CC,OAA3C,CAFc;;AAAA;AAE7BS,kBAF6B;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAIjCE,gBAAIE,KAAJ,CAAU,OAAV,EAAmB,0BAAnB;AACAD,gBAAIE,QAAJ,CAAa,MAAb;AALiC;;AAAA;AAAA,6CAQ5BL,MAR4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA,WAAoDC,kBAApD;AAAA;AAAA;;AAAA,SAAoDA,kBAApD;AAAA;;AAWAnB,gBAAgBwB,iBAAhB,GAAoC,SAASA,iBAAT,CAA2BC,SAA3B,EAAsCL,GAAtC,EAA2CF,MAA3C,EAAmD;AACrF,MAAIQ,cAAc,EAAlB;AACAA,cAAYC,IAAZ,GAAmBF,SAAnB,EACAC,YAAYnB,MAAZ,GAAqBa,IAAIQ,IAAJ,CAASrB,MAD9B,EAEAmB,YAAYjB,OAAZ,GAAsBW,IAAIQ,IAAJ,CAASnB,OAF/B,EAGAiB,YAAYG,cAAZ,GAA6BT,IAAIQ,IAAJ,CAASE,MAAT,GAAkB,GAAlB,GAAwBV,IAAIQ,IAAJ,CAASG,GAAjC,GAAuC,GAAvC,GAA6CX,IAAIQ,IAAJ,CAASI,IAAtD,GAA6D,GAA7D,GAAmEZ,IAAIQ,IAAJ,CAASK,KAA5E,GAAoF,GAApF,GAA0Fb,IAAIQ,IAAJ,CAASM,GAAnG,GAAyG,GAAzG,GAA+Gd,IAAIQ,IAAJ,CAASO,OAHrJ,EAIAT,YAAYU,QAAZ,GAAuB,QAJvB,EAKAV,YAAYW,qBAAZ,GAAoCnB,OAAOoB,EAL3C;AAMA,SAAOZ,WAAP;AACD,CATD;;AAWAa,OAAOC,OAAP,GAAiBxC,eAAjB","file":"index.js","sourcesContent":["let paymentServices = {};\n\n// Set secret Stripe key: remember to change this your live secret key in production\n// My keys here: https://dashboard.stripe.com/account/apikeys\nlet stripe = require(\"stripe\")(process.env.stripeSecret);\n\nfunction promiseToCreateStripeCharge(amount, token, purpose) {\n  return new Promise(function (resolve, reject) {\n     stripe.charges.create({ \n        amount: amount * 100,\n        currency: \"usd\",\n        source: token,\n        description: purpose\n      }, function(err, charge) {\n          if (err) { reject(err) }\n          else { resolve(charge) }\n      });\n  });\n}\n\npaymentServices.createStripeCharge = async function createStripeCharge(amount, token, purpose, req, res) {\n  var charge;\n  try { charge = await promiseToCreateStripeCharge(amount, token, purpose) }\n  catch(error) { \n    req.flash('error', 'error processing payment');\n    res.redirect('back');\n    return;\n  }\n  return charge;\n}\n    \npaymentServices.gatherPaymentData = function gatherPaymentData(foundUser, req, charge) { \n  let paymentData = {};\n  paymentData.user = foundUser,\n  paymentData.amount = req.body.amount,\n  paymentData.purpose = req.body.purpose,\n  paymentData.billingAddress = req.body.street + ' ' + req.body.apt + ' ' + req.body.city + ' ' + req.body.state + ' ' + req.body.zip + ' ' + req.body.country,\n  paymentData.merchant = 'Stripe',\n  paymentData.merchantTransactionId = charge.id;\n  return paymentData;\n}\n\nmodule.exports = paymentServices;"]}
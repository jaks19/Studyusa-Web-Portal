{"version":3,"sources":["../../../services/notif-services/index.js"],"names":["notifServices","Notif","require","User","getUnseenNotifs","notifs","unseenNotifs","slice","forEach","notif","seen","push","getBothSeenAndUnseenNotifs","seenNotifs","assignNotif","doerAccountUserName","nameOfTheConcernedObjectChangedOrCreatedOrDeleted","eventStringInNotifJson","receivingAccountUsername","req","notifData","causerName","objectName","event","create","err","newNotif","flash","findOne","error","foundUser","save","Err","assignNotification","eventString","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["var notifServices = {};\n\nlet Notif = require('../../models/notif'),\n    User = require('../../models/user');\n\nnotifServices.getUnseenNotifs = function getUnseenNotifs(notifs) {\n  var unseenNotifs = [];\n  notifs.slice(0).forEach(function(notif) {\n    if (!notif.seen) {\n        unseenNotifs.push(notif);\n    }\n  });\n  return unseenNotifs;\n}\n\nnotifServices.getBothSeenAndUnseenNotifs = function getBothSeenAndUnseenNotifs(notifs) {\n  let seenNotifs = [],\n      unseenNotifs = [];\n  notifs.slice(0).forEach(function(notif){\n        if (notif.seen){ seenNotifs.push(notif) } \n        else { unseenNotifs.push(notif) }\n  });\n  return [seenNotifs, unseenNotifs];\n}\n\nfunction assignNotif(doerAccountUserName, nameOfTheConcernedObjectChangedOrCreatedOrDeleted, eventStringInNotifJson, receivingAccountUsername, req) {\n    var notifData = new Notif({ causerName: doerAccountUserName, objectName: nameOfTheConcernedObjectChangedOrCreatedOrDeleted, event: eventStringInNotifJson });\n    Notif.create(notifData, function(err, newNotif) {\n        if (err) {\n            req.flash('error', 'Could not create a notification for this change!');\n        }\n        else {\n            if (receivingAccountUsername == 'admin') {\n                User.findOne({\n                    'admin': true\n                }, function(error, foundUser) {\n                    foundUser.notifs.push(newNotif);\n                    foundUser.save(function(Err) {\n                        if (Err) {\n                            req.flash('error', 'Could not create a notification for this change!');\n                        }\n                    });\n                });\n            }\n            else {\n                User.findOne({'username': receivingAccountUsername}, function(error, foundUser) {\n                    if (error) {\n                        req.flash('error', 'Could not create a notification for this change!');\n                    }\n                    else {\n                        foundUser.notifs.push(newNotif);\n                        foundUser.save(function(Err) {\n                            if (Err) {\n                                req.flash('error', 'Could not create a notification for this change!');\n                            }\n                        });\n                    }\n                });\n            }\n\n        }\n    });\n};\n\nnotifServices.assignNotification = function assignNotification(doerAccountUserName, objectName, eventString, receivingAccountUsername, req) {\n  if (doerAccountUserName != receivingAccountUsername) {\n    assignNotif(doerAccountUserName, objectName, eventString, receivingAccountUsername, req);\n  } else {\n    // only user to user, no admin to admin\n    assignNotif(doerAccountUserName, objectName, eventString, 'admin', req);\n  }\n}\n   \nmodule.exports = notifServices;"]}
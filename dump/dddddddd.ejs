<% include ./partials/headerUser %>

<div class='row new' align='center'>
    <div class='col-xs-12' style='padding-bottom: 1%;'>
        <h1 style='padding-bottom: 1%;'><%= task.title %></h1>
        <button class="sort-choosable"><a class='blend' href ="/index/<%=user.username%>/tasks/<%=task._id%>/preview">Instructions</a></button>
        <button class="sort-chosen">Workbench</button>
    </div>
</div>

<div class='row'>

    <% if (user.admin) { %>
        <div class='col-sm-2 col-xs-12' align='center' style='padding: 3%;'>
            <% include ./partials/taskQuickViewUsers %>
        </div>
    <% } %>

    <% if (typeof taskSubscriber !== "undefined") { %>
        <div class='col-sm-4 col-sm-offset-1 col-xs-12' align='center' style='padding: 3%;'>
            <% include ./partials/taskFileListOfAUser %>
        </div>

        <div class="col-sm-4 col-xs-12" style='padding: 3%;'>
            <% include ./partials/taskComments %>
        </div>
    <% } %>


    <div id='displayer' class="panel-body" style='border: 0.5px #aee3ee;'>

    </div>

<button>Submit</button>

</div>

<script>
        $('#quick-browse').draggable();
</script>

<style>
body {
    background: #eee;
}


.sort-chosen{
    color: #eeeeee;
    background-color: #afc2d4;
    cursor: default;
}

.sort-choosable {
    color: #eeeeee;
    background-color: rgb(46, 111, 168);
}

/* Search bar and buttons CSS */
input:focus, textarea, button:focus {
    outline: none !important;
}

.new button {
    font-size: 100%`;
    padding: 5px 15px;
    border-radius: 25px;
    border: none;
    text-decoration: none;
    margin: 2px 0;
}

a.blend:link,
a.blend:visited,
a.blend:hover,
a.blend:active
{
   color: white;
   text-decoration: none;
}
</style>






<script>

$('button').click(function(e){

  e.preventDefault();

  let request = new XMLHttpRequest();
  request.open('GET', '/api/' + 'anything', false);
  request.send();
  if (request.status === 200) {
    const response = JSON.parse(request.responseText);
    downloadFile(response.signedUrl, response.fileName);
  }
  else{ alert('Could not get signed URL.') }
});

function downloadFile(signedUrl, fileName){
   // $('body').append(`<a href="${signedUrl}" id="link" download="${fileName}"  style="visibility: hidden;">.</a>`);

   // let toBeRemoved = document.getElementById("link");
   // toBeRemoved.click();
   // toBeRemoved.parentNode.removeChild(toBeRemoved);
   let requestTWO = new XMLHttpRequest();
   requestTWO.open('GET', signedUrl, false);
   requestTWO.send();

   if (requestTWO.status === 200) {
     console.log(requestTWO.response);
     console.log(requestTWO.responseText);
     console.log(requestTWO.responseText === requestTWO.response);

     let promptHTML = $.parseHTML(requestTWO.responseText);
     $('#displayer').append(promptHTML);
   }
}


</script>

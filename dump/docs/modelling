There are high level objects like users, tasks etc

There are low-level, small objects like messages, comments, taskSubscribers

Policy is: If there can be infinitely many of the low-levels for one high level, then the high level needs to have an array of these
           If instead, there are only one low-level per high-level then do not need to include it there

Example:
A user can have unlimited messages with admins. So user holds all of them in an array.
(TO populate or not depends on the scenario)

A task can have many taskSubscribers that wrap around a User
A task will have an array of taskSubscribers
The user does not need any tie to its taskSubscriber wrapper as we can just search for the wrapper directly to deal with the wrapper.

Also, anyway, TASK is an app and an app should wrap around atomic components of the system








Apps: Tasks, Invitations, Payments

Wrappers used by apps: TaskSubscribers (maybe message thread?)

Atomic units of webapp: User, Group

Lowest: Notifs, Comments, Messages




(Group is not an app, it is a set that facilitates operations)


In MONGOOSE/MONGO, if doc X has doc Y nested and we are creating X or editing X's Y entry etc etc etc
I DO NOT need to pass in the actual object Y into X! Ofc this is completely acceptable,
But if I have only the:
- String _id e.g. req.params.idofY or
- ID Object e.g. Y._id
Mongo/oose will do the necessary thing to confirm the id string or object etc.
Bottomline: Even if Y is nested on X, do not need actual Y to insert into X, can use all the way down to the String of its id!!!
